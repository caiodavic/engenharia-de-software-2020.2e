{"ast":null,"code":"var _jsxFileName = \"/home/fernando/engenharia-de-software-2020.2e/frontend/src/contexts/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport function GlobalContextProvider({\n  children\n}) {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [isLoggedInType, setIsLoggedInType] = useState(false);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      token,\n      setToken,\n      isLoggedInType,\n      setIsLoggedInType\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalContextProvider, \"20al8AiB4n2h5H3RQJB93SD3S9g=\");\n\n_c = GlobalContextProvider;\nexport default UserContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["/home/fernando/engenharia-de-software-2020.2e/frontend/src/contexts/UserContext.js"],"names":["createContext","useState","UserContext","GlobalContextProvider","children","token","setToken","isLoggedInType","setIsLoggedInType"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AACA,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEA,OAAO,SAASG,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA6C;AAAA;;AAClD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,KAAD,CAApD;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,cAAnB;AAAmCC,MAAAA;AAAnC,KADT;AAAA,cAGGJ;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVeD,qB;;KAAAA,qB;AAWhB,eAAeD,WAAf","sourcesContent":["import { createContext, useState } from 'react';\nconst UserContext = createContext();\n\nexport function GlobalContextProvider({ children }) {\n  const [token, setToken] = useState(false);\n  const [isLoggedInType, setIsLoggedInType] = useState(false);\n  return (\n    <UserContext.Provider\n      value={{ token, setToken, isLoggedInType, setIsLoggedInType }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n}\nexport default UserContext;\n"]},"metadata":{},"sourceType":"module"}