{"ast":null,"code":"var _jsxFileName = \"/home/fernando/engenharia-de-software-2020.2e/frontend/src/pages/Admin/CreateLot/index.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { getVaccineList } from '../../../services/api';\nimport { PageWrapper, PageTitle, StyledForm } from '../../../components/shared/CommonStyles';\nimport UserContext from '../../../contexts/UserContext';\nimport { useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateLot() {\n  _s();\n\n  const [namesList, setNamesList] = useState([]); // lista de opcoes da vacina recebidas pela API\n\n  const [name, setName] = useState('');\n  const [qtdDoses, setQtdDosed] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    token\n  } = useContext(UserContext);\n  const today = getToday();\n  useEffect(loadVaccineNames, [token]);\n\n  function loadVaccineNames() {\n    getToday();\n    let vaccines = getVaccineList({\n      token\n    });\n    setNamesList(vaccines.map(vac => vac.nomeVacina));\n  }\n\n  function submitInput(e) {\n    e.preventDefault();\n    console.log(name, qtdDoses, expirationDate);\n  }\n\n  function getToday() {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    let todayToString = yyyy + '-' + mm + '-' + dd;\n    return todayToString;\n  }\n\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(CreateLotWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n        children: \"Cadastrar Lote da Vacina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: submitInput,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"names\",\n          children: \"Nome da Vacina: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          value: name,\n          placeholder: \"Selecione a Fabricante da Vacina\",\n          onChange: e => setName(e.target.value),\n          list: \"names\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"names\",\n          children: namesList.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"qtd-doses\",\n          children: \"Quantidade de Vacinas: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"doses\",\n          value: qtdDoses,\n          min: \"1\",\n          placeholder: \"Insira a quantidade de vacinas no Lote\",\n          onChange: e => setQtdDosed(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expiration-date\",\n          children: \"Data de Validade: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"expiration-date\",\n          value: expirationDate,\n          min: today,\n          onChange: e => setExpirationDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          disabled: isLoading,\n          value: \"Cadastrar Vacina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateLot, \"AhjMUm+35LzkB0rP4Tg8+rTJ9Aw=\");\n\n_c = CreateLot;\nconst CreateLotWrapper = styled.div`\n  width: 800px;\n  @media screen and(max-width:800px) {\n    max-width: 100vw;\n  }\n`;\n_c2 = CreateLotWrapper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateLot\");\n$RefreshReg$(_c2, \"CreateLotWrapper\");","map":{"version":3,"sources":["/home/fernando/engenharia-de-software-2020.2e/frontend/src/pages/Admin/CreateLot/index.js"],"names":["styled","useState","useEffect","getVaccineList","PageWrapper","PageTitle","StyledForm","UserContext","useContext","CreateLot","namesList","setNamesList","name","setName","qtdDoses","setQtdDosed","expirationDate","setExpirationDate","isLoading","setIsLoading","token","today","getToday","loadVaccineNames","vaccines","map","vac","nomeVacina","submitInput","e","preventDefault","console","log","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","todayToString","target","value","CreateLotWrapper","div"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { getVaccineList } from '../../../services/api';\nimport {\n  PageWrapper,\n  PageTitle,\n  StyledForm,\n} from '../../../components/shared/CommonStyles';\nimport UserContext from '../../../contexts/UserContext';\nimport { useContext } from 'react';\n\nexport default function CreateLot() {\n  const [namesList, setNamesList] = useState([]); // lista de opcoes da vacina recebidas pela API\n  const [name, setName] = useState('');\n  const [qtdDoses, setQtdDosed] = useState('');\n  const [expirationDate, setExpirationDate] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { token } = useContext(UserContext);\n  const today = getToday();\n\n  useEffect(loadVaccineNames, [token]);\n\n  function loadVaccineNames() {\n    getToday();\n    let vaccines = getVaccineList({ token });\n    setNamesList(vaccines.map((vac) => vac.nomeVacina));\n  }\n\n  function submitInput(e) {\n    e.preventDefault();\n    console.log(name, qtdDoses, expirationDate);\n  }\n\n  function getToday() {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n\n    if (dd < 10) {\n      dd = '0' + dd;\n    }\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    let todayToString = yyyy + '-' + mm + '-' + dd;\n    return todayToString;\n  }\n\n  return (\n    <PageWrapper>\n      <CreateLotWrapper>\n        <PageTitle>Cadastrar Lote da Vacina</PageTitle>\n\n        <StyledForm onSubmit={submitInput}>\n          <label htmlFor=\"names\">Nome da Vacina: </label>\n          <input\n            required\n            value={name}\n            placeholder=\"Selecione a Fabricante da Vacina\"\n            onChange={(e) => setName(e.target.value)}\n            list=\"names\"\n          />\n          <datalist id=\"names\">\n            {namesList.map((name) => (\n              <option value={name} />\n            ))}\n          </datalist>\n\n          <label htmlFor=\"qtd-doses\">Quantidade de Vacinas: </label>\n          <input\n            type=\"number\"\n            id=\"doses\"\n            value={qtdDoses}\n            min=\"1\"\n            placeholder=\"Insira a quantidade de vacinas no Lote\"\n            onChange={(e) => setQtdDosed(e.target.value)}\n            required\n          />\n\n          <label htmlFor=\"expiration-date\">Data de Validade: </label>\n          <input\n            type=\"date\"\n            id=\"expiration-date\"\n            value={expirationDate}\n            min={today}\n            onChange={(e) => setExpirationDate(e.target.value)}\n            required\n          />\n          <input type=\"submit\" disabled={isLoading} value=\"Cadastrar Vacina\" />\n        </StyledForm>\n      </CreateLotWrapper>\n    </PageWrapper>\n  );\n}\n\nconst CreateLotWrapper = styled.div`\n  width: 800px;\n  @media screen and(max-width:800px) {\n    max-width: 100vw;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}