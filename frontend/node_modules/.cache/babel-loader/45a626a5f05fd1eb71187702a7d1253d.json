{"ast":null,"code":"function createHeaders(token) {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  return config;\n}\n\nvar vacinas = [{\n  nomeVacina: 'janssen',\n  numDosesNecessarias: 1,\n  diasEntreDoses: 0\n}, {\n  nomeVacina: 'pfiiizerrr',\n  numDosesNecessarias: 2,\n  diasEntreDoses: 90\n}];\nvar lotes = [{\n  id: 111,\n  vacina: {\n    nomeVacina: 'pfiiizerrr',\n    numDosesNecessarias: 2,\n    diasEntreDoses: 90\n  },\n  qtdDosesDisponiveis: 200,\n  dataDeValidade: '2022-31-01',\n  posto: postos\n}];\nvar postos = [{\n  id: 123,\n  enderecoPosto: 'rua blablau',\n  telefone: '(79) 99999-3232',\n  email: 'email@email.com',\n  nomePosto: 'Posto Ipiranga',\n  vacina: {\n    nome: 'astrazeneca',\n    quantidade: '100'\n  }\n}];\nvar pfizer = {\n  nomeVacina: 'pfiiizerrr',\n  numDosesNecessarias: 2,\n  diasEntreDoses: 90\n};\nvar lote = {\n  id: 321,\n  vacina: pfizer,\n  qtdDosesDisponiveis: 666,\n  dataDeValidade: '2042-31-01'\n};\n\nfunction isAdmin({\n  token\n}) {\n  return token === 1; //TO-DO botar uma logica nisso\n}\n\nfunction getVaccineList({\n  token\n}) {\n  return vacinas;\n}\n\nfunction getLotsList({\n  token\n}) {\n  return lotes;\n}\n\nfunction getUnitsList({\n  token\n}) {\n  return postos;\n}\n\nfunction postLogin({\n  email,\n  password,\n  loginType\n}) {\n  const body = {\n    email,\n    password,\n    loginType\n  };\n  console.log('login', body);\n}\n/**\n * Método que verifica se o usuário é Admin (secretário de saúde) TO-DO NOT YET IMPLEMENTED\n * @param {token: secretario de saude?}\n */\n\n\nfunction checkIfAdmin({\n  token\n}) {\n  if (isAdmin({\n    token\n  })) {\n    return true;\n  }\n\n  console.log(token);\n  alert('Operação Não Permitida!');\n  return false;\n}\n/**\n * Método POST para cadastrar Posto de Vacinação TO-DO NOT YET IMPLEMENTED\n * @param {body: {{nome,email,senha,telefone,endereco}}, token:secretaria}\n */\n\n\nfunction postUnitSignUp({\n  body,\n  token\n}) {\n  if (checkIfAdmin(token)) {\n    const config = createHeaders(token);\n  } //TO-DO\n\n}\n\nexport { isAdmin, getVaccineList, getLotsList, getUnitsList, postLogin, postUnitSignUp };","map":{"version":3,"sources":["/home/fernando/engenharia-de-software-2020.2e/frontend/src/services/api.js"],"names":["createHeaders","token","config","headers","Authorization","vacinas","nomeVacina","numDosesNecessarias","diasEntreDoses","lotes","id","vacina","qtdDosesDisponiveis","dataDeValidade","posto","postos","enderecoPosto","telefone","email","nomePosto","nome","quantidade","pfizer","lote","isAdmin","getVaccineList","getLotsList","getUnitsList","postLogin","password","loginType","body","console","log","checkIfAdmin","alert","postUnitSignUp"],"mappings":"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","sourcesContent":["function createHeaders(token) {\n  const config = { headers: { Authorization: `Bearer ${token}` } };\n  return config;\n}\n\nvar vacinas = [\n  {\n    nomeVacina: 'janssen',\n    numDosesNecessarias: 1,\n    diasEntreDoses: 0,\n  },\n  {\n    nomeVacina: 'pfiiizerrr',\n    numDosesNecessarias: 2,\n    diasEntreDoses: 90,\n  },\n];\n\nvar lotes = [\n  {\n    id: 111,\n    vacina: {\n      nomeVacina: 'pfiiizerrr',\n      numDosesNecessarias: 2,\n      diasEntreDoses: 90,\n    },\n    qtdDosesDisponiveis: 200,\n    dataDeValidade: '2022-31-01',\n    posto: postos,\n  },\n];\n\nvar postos = [\n  {\n    id: 123,\n    enderecoPosto: 'rua blablau',\n    telefone: '(79) 99999-3232',\n    email: 'email@email.com',\n    nomePosto: 'Posto Ipiranga',\n    vacina: { nome: 'astrazeneca', quantidade: '100' },\n  },\n];\n\nvar pfizer = {\n  nomeVacina: 'pfiiizerrr',\n  numDosesNecessarias: 2,\n  diasEntreDoses: 90,\n};\n\nvar lote = {\n  id: 321,\n  vacina: pfizer,\n  qtdDosesDisponiveis: 666,\n  dataDeValidade: '2042-31-01',\n};\n\nfunction isAdmin({ token }) {\n  return token === 1; //TO-DO botar uma logica nisso\n}\n\nfunction getVaccineList({ token }) {\n  return vacinas;\n}\n\nfunction getLotsList({ token }) {\n  return lotes;\n}\n\nfunction getUnitsList({ token }) {\n  return postos;\n}\n\nfunction postLogin({ email, password, loginType }) {\n  const body = { email, password, loginType };\n  console.log('login', body);\n}\n\n/**\n * Método que verifica se o usuário é Admin (secretário de saúde) TO-DO NOT YET IMPLEMENTED\n * @param {token: secretario de saude?}\n */\nfunction checkIfAdmin({ token }) {\n  if (isAdmin({ token })) {\n    return true;\n  }\n  console.log(token);\n  alert('Operação Não Permitida!');\n  return false;\n}\n\n/**\n * Método POST para cadastrar Posto de Vacinação TO-DO NOT YET IMPLEMENTED\n * @param {body: {{nome,email,senha,telefone,endereco}}, token:secretaria}\n */\nfunction postUnitSignUp({ body, token }) {\n  if (checkIfAdmin(token)) {\n    const config = createHeaders(token);\n  }\n  //TO-DO\n}\n\nexport {\n  isAdmin,\n  getVaccineList,\n  getLotsList,\n  getUnitsList,\n  postLogin,\n  postUnitSignUp,\n};\n"]},"metadata":{},"sourceType":"module"}